specVersion: 0.0.2

description: Liquidity pools on Ethereum designed for efficient trading markerts
repository: https://github.com/curvefi/curve-subgraph

schema:
  file: ./schema.graphql

templates:
  # Main pool contract
  - name: Pool
    kind: ethereum/contract
    network: mainnet
    source:
      abi: StableSwap
    mapping: &pool_mapping
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities: [ ]
      abis:
        - name: StableSwap
          file: ./abis/StableSwap.abi
        - name: Registry
          file: ./abis/Registry.abi
      eventHandlers:
        - event: AddLiquidity(indexed address,uint256[2],uint256[2],uint256,uint256)
          handler: handleAddLiquidity
        - event: NewAdmin(indexed address)
          handler: handleNewAdmin
        - event: NewParameters(uint256,uint256,uint256)
          handler: handleNewParameters
        - event: NewFee(uint256,uint256)
          handler: handleNewFee
        - event: RampA(uint256,uint256,uint256,uint256)
          handler: handleRampA
        - event: StopRampA(uint256,uint256)
          handler: handleStopRampA
        - event: RemoveLiquidity(indexed address,uint256[2],uint256[2],uint256)
          handler: handleRemoveLiquidity
        - event: RemoveLiquidityImbalance(indexed address,uint256[2],uint256[2],uint256,uint256)
          handler: handleRemoveLiquidityImbalance
        - event: RemoveLiquidityOne(indexed address,uint256,uint256)
          handler: handleRemoveLiquidityOne
        - event: TokenExchange(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchange
        - event: TokenExchangeUnderlying(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchangeUnderlying

dataSources:
  # Address provider for registry contracts
  - name: AddressProvider
    kind: ethereum/contract
    network: mainnet
    source:
      abi: AddressProvider
      address: '0x0000000022d53366457f9d5e68ec105046fc4383'
      startBlock: 11500000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/address-provider.ts
      abis:
        - name: AddressProvider
          file: ./abis/AddressProvider.abi
      entities:
        - Contract
        - SystemState
      eventHandlers:
        - event: AddressModified(indexed uint256,address,uint256)
          handler: handleAddressModified
        - event: NewAddressIdentifier(indexed uint256,address,string)
          handler: handleNewAddressIdentifier

  # Main registry contract used to locate pools and query information about them as well as registered coins.
  - name: MainRegistry
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Registry
      address: '0x90e00ace148ca3b23ac1bc8c240c2a7dd9c2d7f5'
      startBlock: 11500000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/registry.ts
      entities: [ ]
      abis:
        - name: ERC20
          file: ./abis/ERC20.abi
        - name: PoolInfo
          file: ./abis/PoolInfo.abi
        - name: Registry
          file: ./abis/Registry.abi
        - name: StableSwap
          file: ./abis/StableSwap.abi
      eventHandlers:
        - event: PoolAdded(indexed address,bytes)
          handler: handlePoolAdded
        - event: PoolRemoved(indexed address)
          handler: handlePoolRemoved

  # Contract used to deploy new metapools. It also acts a registry for finding the deployed pools and querying information about them.
  - name: MetapoolFactory
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Factory
      address: '0x0959158b6040d32d04c301a72cbfd6b39e21c9ae'
      startBlock: 11942404
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      abis:
        - name: Factory
          file: ./abis/Factory.abi
      entities:
        - Pool
      eventHandlers:
        - event: MetaPoolDeployed(address,address,uint256,uint256,address)
          handler: handleMetaPoolDeployed
